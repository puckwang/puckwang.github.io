<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>專案拆分 on Puck's Blog</title><link>https://blog.puckwang.com/tags/%E5%B0%88%E6%A1%88%E6%8B%86%E5%88%86/</link><description>Recent content in 專案拆分 on Puck's Blog</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2017-2024, Puck Wang; all rights reserved.</copyright><lastBuildDate>Wed, 18 Mar 2020 21:29:12 +0800</lastBuildDate><atom:link href="https://blog.puckwang.com/tags/%E5%B0%88%E6%A1%88%E6%8B%86%E5%88%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Git 進階應用 Submodule 與 Subtree，使用它們來拆分專案</title><link>https://blog.puckwang.com/posts/2020/git-submodule-vs-subtree/</link><pubDate>Wed, 18 Mar 2020 21:29:12 +0800</pubDate><guid>https://blog.puckwang.com/posts/2020/git-submodule-vs-subtree/</guid><description>&lt;p>在開發過程中，專案隨著時間變得越來越肥，不時還生出子專案，此時就會遇到需要各專案共用一些 Code 的部分，如果共用的部分是用 &lt;code>複製貼上&lt;/code> 的方式去同步，那勢必一定會造成兩邊不同步，維護困難。&lt;/p>
&lt;p>本篇文將分享 Git Submodule 與 Git Subtree 的差異及它們的使用方法。&lt;/p></description></item></channel></rss>